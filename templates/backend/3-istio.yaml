apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: {{.Values.name}}
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - {{.Values.host}}
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: {{.Values.name}}
spec:
  host: {{.Values.name}}
  subsets:
  - name: canary
    labels:
      harness.io/track: canary
  - name: stable
    labels:
      harness.io/track: stable
---
#
# Ingress for the UI
#
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{.Values.frontend.uiPath}}
spec:
  hosts:
  - {{.Values.host}}
  gateways:
  - {{.Values.name}}
  http:
  - match:
    - uri:
        prefix: /{{.Values.frontend.uiPath}}
    rewrite:
      uri: /
    route:
    - destination:
        host: {{.Values.frontend.uiPath}}
---
#
# Main ingress for the backend that will split between stable and canary during deployment
#
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{.Values.name}}
spec:
  hosts:
  - {{.Values.host}}
  gateways:
  - {{.Values.name}}
  http:
  - match:
    - uri:
        exact: /{{.Values.name}}
    rewrite:
      uri: /color/index.html
    route:
    - destination:
        host: {{.Values.name}}
        subset: stable
    {{- if .Values.splitTraffic}}
      weight: {{.Values.stableWeight}}
    - destination:
        host: {{.Values.name}}
        subset: canary
      weight: {{.Values.canaryWeight}}
    {{- end}}
---
#
# Dedicated ingress for canary
#
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{.Values.canaryName}}
spec:
  hosts:
  - {{.Values.host}}
  gateways:
  - {{.Values.name}}
  http:
  - match:
    - uri:
        exact: /{{.Values.name}}
    rewrite:
      uri: /color/index.html
    route:
    - destination:
        host: {{.Values.name}}
        subset: canary
---
#
# Dedicated ingress for stable
#
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: {{.Values.stableName}}
spec:
  hosts:
  - {{.Values.host}}
  gateways:
  - {{.Values.name}}
  http:
  - match:
    - uri:
        exact: /{{.Values.name}}
    rewrite:
      uri: /color/index.html
    route:
    - destination:
        host: {{.Values.name}}
        subset: stable
